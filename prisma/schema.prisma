generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id         Int        @id @default(autoincrement())
  first_name String     @db.VarChar(255)
  last_name  String     @db.VarChar(255)
  email      String     @db.VarChar(255)
  sub_id     String     @db.VarChar(255)
  addresses  Address[]
  carts      Cart[]
  feedback   Feedback[]
  orders     Order[]
  payments   Payment[]
  wishlists  Wishlist[]

  @@map("customers")
}

model Address {
  id          Int       @id @default(autoincrement())
  customer_id Int?
  street      String    @db.VarChar(255)
  city        String    @db.VarChar(255)
  province    String    @db.VarChar(255)
  country     String    @db.VarChar(255)
  postal      String    @db.VarChar(255)
  phone       String    @db.VarChar(255)
  billing     Boolean
  customers   Customer? @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("addresses")
}

model Product {
  id          Int       @id @default(autoincrement())
  category_id Int?
  name        String    @db.VarChar(255)
  price       Decimal   @db.Decimal
  stock       Int
  image       String?   @db.VarChar(255)
  description String?
  categories  Category? @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("products")
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @db.VarChar(255)
  products Product[]

  @@map("categories")
}

model Order {
  id          Int         @id @default(autoincrement())
  customer_id Int?
  payment_id  Int?
  order_date  DateTime    @db.Timestamp(6)
  total_price Decimal     @db.Decimal
  order_items OrderItem[]
  customers   Customer?   @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  payments    Payment?    @relation(fields: [payment_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("orders")
}

model Payment {
  id               Int       @id @default(autoincrement())
  customer_id      Int?
  date             DateTime  @db.Timestamp(6)
  total_price      Decimal   @db.Decimal
  stripe_charge_id String    @db.VarChar(255)
  orders           Order[]
  customers        Customer? @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("payments")
}

model Cart {
  id          Int       @id @default(autoincrement())
  customer_id Int?
  product_id  Int?
  qty         Int
  customers   Customer? @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("carts")
}

model OrderItem {
  id         Int     @id @default(autoincrement())
  order_id   Int?
  product_id Int?
  qty        Int
  price      Decimal @db.Decimal
  orders     Order?  @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("order_items")
}

model Wishlist {
  id          Int       @id @default(autoincrement())
  customer_id Int?
  product_id  Int?
  customers   Customer? @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("wishlists")
}

model Feedback {
  id          Int       @id @default(autoincrement())
  customer_id Int?
  product_id  Int?
  rating      Int
  comment     String    @db.VarChar(255)
  customers   Customer? @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("feedback")
}

model Discount {
  id          Int      @id @default(autoincrement())
  product_id  Int?
  discount    Int
  start_date  DateTime @db.Date
  end_date    DateTime @db.Date
  description String   @db.VarChar(255)

  @@map("discounts")
}

model Admin {
  id         Int    @id @default(autoincrement())
  email      String @db.VarChar(255)
  sub_id     String @db.VarChar(255)
  first_name String @db.VarChar(255)
  last_name  String @db.VarChar(255)

  @@map("admins")
}
