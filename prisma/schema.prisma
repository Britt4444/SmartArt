// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Customers {
  id        Int      @id @default(autoincrement())
  first_name      String
  last_name       String
  email     String @unique
  sub_id    String
  addresses Addresses[]
  orders Orders[]
  payments Payments[]
  carts Carts[]
  wishlists Wishlists[]
  feedback Feedback[]
  @@map("customers")
}

model Addresses {
  id  Int   @id @default(autoincrement())
  customer Customers @relation(fields: [customer_id], references: [id])
  customer_id Int @unique
  street String
  city String
  province String
  country String
  postal String
  phone String
  billing Boolean
  @@map("addresses")
}

model Products {
  id        Int      @id @default(autoincrement())
  category Catergories @relation(fields: [category_id], references: [id])
  category_id Int
  name      String
  price     Decimal
  stock     Int
  image     String
  description String
  carts Carts[]
  order_items Order_items[]
  wishlists Wishlists[]
  feedback Feedback[]
  discounts Discounts[]
  @@map("products")
}

model Catergories {
  id        Int      @id @default(autoincrement())
  name      String
  products  Products[]
  @@map("categories")
}

model Orders {
  id        Int      @id @default(autoincrement())
  customer Customers @relation(fields: [customer_id], references: [id])
  customer_id Int @unique
  payment Payments @relation(fields: [payment_id], references: [id])
  payment_id Int
  order_date DateTime
  total_price Decimal
  order_items Order_items[]
  @@map("orders")
}

model Payments {
  id        Int      @id @default(autoincrement())
  customer Customers @relation(fields: [customer_id], references: [id])
  customer_id Int @unique
  date DateTime
  total_price Decimal
  stripe_charge_id String
  Orders Orders[]
  @@map("payments")
}

model Carts {
  id       Int      @id @default(autoincrement())
  customer Customers @relation(fields: [customer_id], references: [id])
  customer_id Int @unique
  product Products @relation(fields: [product_id], references: [id])
  product_id Int @unique
  qty Int
  @@map("carts")
}

model Order_items {
  id        Int      @id @default(autoincrement())
  order Orders @relation(fields: [order_id], references: [id])
  order_id Int @unique
  product Products @relation(fields: [product_id], references: [id])
  product_id Int @unique
  qty Int
  price Decimal
  @@map("order_items")
}


model Wishlists {
  id        Int      @id @default(autoincrement())
  customer Customers @relation(fields: [customer_id], references: [id])
  customer_id Int @unique
  product Products @relation(fields: [product_id], references: [id])
  product_id Int @unique
  @@map("wishlists")
}


model Feedback {
  id        Int      @id @default(autoincrement())
  customer Customers @relation(fields: [customer_id], references: [id])
  customer_id Int @unique
  product Products @relation(fields: [product_id], references: [id])
  product_id Int @unique
  rating Int
  comment String
  @@map("feedback")
}


model Discounts {
  id        Int      @id @default(autoincrement())
  product Products @relation(fields: [product_id], references: [id])
  product_id Int @unique
  discount Int
  start_date DateTime
  end_date DateTime
  description String
  @@map("discounts")
}


model Admins {
  id        Int      @id @default(autoincrement())
  first_name      String
  last_name       String
  email     String @unique
  sub_id   String
  @@map("admins")
}